<?xml version="1.0" ?>
<synergyModuleDescription>
	<config id="config.driver.flash_hp" path="ssp_cfg/driver/r_flash_cfg.h" version="1">
		<property default="config.driver.flash_hp.param_checking_enable.bsp" display="Parameter Checking" id="config.driver.flash_hp.param_checking_enable" description="If selected code for parameter checking is included in the build.">
            <option display="Default (BSP)" id="config.flash_hp.param_checking_enable.bsp" value="(BSP_CFG_PARAM_CHECKING_ENABLE)"/>
			<option display="Enabled" id="config.driver.flash_hp.param_checking_enable.enabled" value="(1)"/>
			<option display="Disabled" id="config.driver.flash_hp.param_checking_enable.disabled" value="(0)"/>
		</property>
		<property default="config.driver.flash_hp.param_code_flash_programming_enable.disabled" display="Code Flash Programming Enable" id="config.driver.flash_hp.param_code_flash_programming_enable" description="Controls whether or not code-flash programming is enabled. Disabling reduces the amount of ROM used by the API.">
			<option display="Enabled" id="config.driver.flash_hp.param_code_flash_programming_enable.enabled" value="(1)"/>
			<option display="Disabled" id="config.driver.flash_hp.param_code_flash_programming_enable.disabled" value="(0)"/>
		</property>	
		<content>#define FLASH_CFG_PARAM_CHECKING_ENABLE ${config.driver.flash_hp.param_checking_enable}
		         #define FLASH_CFG_PARAM_CODE_FLASH_PROGRAMMING_ENABLE ${config.driver.flash_hp.param_code_flash_programming_enable}
		</content>
 	</config>
	<module config="config.driver.flash_hp" display="Driver|Storage|${module.driver.flash.name} Flash Driver on r_flash_hp" id="module.driver.flash_on_flash_hp" version="1" url="http://knowledgebase.renesas.com/English_Content/Renesas_Synergy%E2%84%A2_Platform/Renesas_Synergy_Knowledge_Base/r__flash_Module_Guide_Resources">
        <constraint display="Unique name required for each instance">
            "${interface.driver.flash.${module.driver.flash.name}}" === "1"
        </constraint>
        <constraint display="Interrupts must be enabled if BGO is enabled.">
            ("${module.driver.flash.data_flash_bgo}" != "module.driver.flash.data_flash_bgo.enabled") ||
            (("${module.driver.flash.irq_ipl}" != "board.icu.common.irq.disabled") &amp;&amp;
             ("${module.driver.flash.err_irq_ipl}" != "board.icu.common.irq.disabled"))
        </constraint>
        <constraint display="All flash interrupt priorities must be the same priority level.">
            "${module.driver.flash.irq_ipl}" == "board.icu.common.irq.disabled" || "${module.driver.flash.err_irq_ipl}" == "board.icu.common.irq.disabled" || "${module.driver.flash.irq_ipl}" == "${module.driver.flash.err_irq_ipl}"
        </constraint>
        <constraint display="Requires Flash HP peripheral">
          "${interface.mcu.flash_hp}" === "1"
        </constraint>
        <requires id="interface.driver.flash_hp.requires.mcu" visible="false" interface="interface.mcu.flash_hp" display="Requires Flash HP peripheral"/>
        <provides interface="interface.driver.flash" />
        <provides interface="interface.driver.flash_on_flash_hp" />
        <provides interface="interface.driver.flash.${module.driver.flash.name}" />
        <property default="g_flash${_instance}" display="Name" id="module.driver.flash.name" description="Module name.">
			<constraint display="Name must be a valid C symbol">testSymbol("${module.driver.flash.name}")</constraint>
        </property>
     	<property default="module.driver.flash.data_flash_bgo.enabled" display="Data Flash Background Operation" id="module.driver.flash.data_flash_bgo" description="Enabling allows Flash API calls that reference data-flash to return immediately, with the operation continuing in the background.">
			<option display="Enabled" id="module.driver.flash.data_flash_bgo.enabled" value="true"/>
			<option display="Disabled" id="module.driver.flash.data_flash_bgo.disabled" value="false"/>
		</property>
        <property default="NULL" display="Callback" id="module.driver.flash.p_callback" description="A user callback function can be specified. Callback function called when a dataflash BGO operation completes or errors.">
			<constraint display="Name must be a valid C symbol">testSymbol("${module.driver.flash.p_callback}")</constraint>
        </property>
        <property default="" display="Flash Ready Interrupt Priority" id="module.driver.flash.irq_ipl" description="Select the flash ready interrupt priority.">
            <select enum="enum.mcu.nvic.priorities.optional"/>
        </property>
        <property default="" display="Flash Error Interrupt Priority" id="module.driver.flash.err_irq_ipl" description="Select the flash error interrupt priority.">
            <select enum="enum.mcu.nvic.priorities.optional"/>
        </property>
        <header>
            /* Flash on Flash HP Instance */
            extern const flash_instance_t ${module.driver.flash.name};
#ifndef ${module.driver.flash.p_callback}
void ${module.driver.flash.p_callback}(flash_callback_args_t * p_args);
#endif
        </header>
		
		<includes>#include &quot;r_flash_hp.h&quot;
#include &quot;r_flash_api.h&quot;</includes>
		<declarations>
#if ${module.driver.flash.irq_ipl} != BSP_IRQ_DISABLED
#if !defined(SSP_SUPPRESS_ISR_${module.driver.flash.name}) &amp;&amp; !defined(SSP_SUPPRESS_ISR_FLASH)
SSP_VECTOR_DEFINE(fcu_frdyi_isr, FCU, FRDYI);
#endif
#endif
#if ${module.driver.flash.err_irq_ipl} != BSP_IRQ_DISABLED
#if !defined(SSP_SUPPRESS_ISR_${module.driver.flash.name}) &amp;&amp; !defined(SSP_SUPPRESS_ISR_FLASH)
SSP_VECTOR_DEFINE(fcu_fiferr_isr, FCU, FIFERR);
#endif
#endif
flash_hp_instance_ctrl_t ${module.driver.flash.name}_ctrl;
const flash_cfg_t ${module.driver.flash.name}_cfg =
{
    .data_flash_bgo      = ${module.driver.flash.data_flash_bgo},
    .p_callback          = ${module.driver.flash.p_callback},
    .p_context           = &amp;${module.driver.flash.name},
    .irq_ipl             = ${module.driver.flash.irq_ipl},
    .err_irq_ipl         = ${module.driver.flash.err_irq_ipl},
};
/* Instance structure to use this module. */
const flash_instance_t ${module.driver.flash.name} = 
{
    .p_ctrl        = &amp;${module.driver.flash.name}_ctrl,
    .p_cfg         = &amp;${module.driver.flash.name}_cfg,
    .p_api         = &amp;g_flash_on_flash_hp
};
</declarations>
	</module>
</synergyModuleDescription>
