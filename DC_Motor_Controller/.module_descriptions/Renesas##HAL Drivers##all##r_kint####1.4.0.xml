<?xml version="1.0" ?>
<synergyModuleDescription>
	<config id="config.driver.kint" path="ssp_cfg/driver/r_kint_cfg.h" version="0">
		<property default="config.driver.kint.param_checking_enable.bsp" display="Parameter Checking Enable" id="config.driver.kint.param_checking_enable" description="If selected code for parameter checking is included in the build.">
			<option display="Default (BSP)" id="config.driver.kint.param_checking_enable.bsp" value="(BSP_CFG_PARAM_CHECKING_ENABLE)"/>
			<option display="Enabled" id="config.driver.kint.param_checking_enable.enabled" value="(1)"/>
			<option display="Disabled" id="config.driver.kint.param_checking_enable.disabled" value="(0)"/>
		</property>
		<content>#define KINT_CFG_PARAM_CHECKING_ENABLE ${config.driver.kint.param_checking_enable}
		</content>
	</config>
	<module config="config.driver.kint" display="Driver|Input|${module.driver.keymatrix.name} Key Matrix Driver on r_kint" id="module.driver.keymatrix_on_kint" version="1" url="http://knowledgebase.renesas.com/English_Content/Renesas_Synergy%E2%84%A2_Platform/Renesas_Synergy_Knowledge_Base/r_kint_Module_Guide_Resources">
		<constraint display="Unique name required for each instance">
    		"${interface.driver.kint.${module.driver.keymatrix.name}}" === "1"
		</constraint>
        <constraint display="Requires KINT Periperal">
          "${interface.mcu.kint.external}" === "1"
        </constraint>
        <requires interface="interface.mcu.kint.external" visible="false" display="Requires KINT Periperal" />
        <provides interface="interface.driver.kint" />
        <provides interface="interface.driver.kint_on_key_matrix" />
		<provides interface="interface.driver.kint.${module.driver.keymatrix.name}" />
        <property default="g_kint${_instance}" display="Name" id="module.driver.keymatrix.name" description="Module name.">
			<constraint display="Name must be a valid C symbol">testSymbol("${module.driver.keymatrix.name}")</constraint>
        </property>
		<property default="module.driver.keymatrix.channel_mask.default" display="Keymatrix Channel Mask" id="module.driver.keymatrix.channel_mask" description="">
			<option display="Select Channels Below" id="module.driver.keymatrix.channel_mask.default" value="(0)"/>
        </property>
		<property default="module.driver.keymatrix.channel_mask.channel_0.unused" display="    Channel 0" id="module.driver.keymatrix.channel_0" description="Select to enable this channel.">
			 <option display="Unused" id="module.driver.keymatrix.channel_mask.channel_0.unused" value="(uint32_t)0"/>
			 <option display="Used" id="module.driver.keymatrix.channel_0.used" value="(uint32_t)0x01"/>
		</property>
		<property default="module.driver.keymatrix.channel_mask.channel_1.unused" display="    Channel 1" id="module.driver.keymatrix.channel_1" description="Select to enable this channel.">
			 <option display="Unused" id="module.driver.keymatrix.channel_mask.channel_1.unused" value="(uint32_t)0"/>
			 <option display="Used" id="module.driver.keymatrix.channel_1.used" value="(uint32_t)0x02"/>
		</property>
		<property default="module.driver.keymatrix.channel_mask.channel_2.unused" display="    Channel 2" id="module.driver.keymatrix.channel_2" description="Select to enable this channel.">
			 <option display="Unused" id="module.driver.keymatrix.channel_mask.channel_2.unused" value="(uint32_t)0"/>
			 <option display="Used" id="module.driver.keymatrix.channel_2.used" value="(uint32_t)0x04"/>
		</property>
		<property default="module.driver.keymatrix.channel_mask.channel_3.unused" display="    Channel 3" id="module.driver.keymatrix.channel_3" description="Select to enable this channel.">
			 <option display="Unused" id="module.driver.keymatrix.channel_mask.channel_3.unused" value="(uint32_t)0"/>
			 <option display="Used" id="module.driver.keymatrix.channel_3.used" value="(uint32_t)0x08"/>
		</property>
		<property default="module.driver.keymatrix.channel_mask.channel_4.unused" display="    Channel 4" id="module.driver.keymatrix.channel_4" description="Select to enable this channel.">
			 <option display="Unused" id="module.driver.keymatrix.channel_mask.channel_4.unused" value="(uint32_t)0"/>
			 <option display="Used" id="module.driver.keymatrix.channel_4.used" value="(uint32_t)0x10"/>
		</property>
		<property default="module.driver.keymatrix.channel_mask.channel_5.unused" display="    Channel 5" id="module.driver.keymatrix.channel_5" description="Select to enable this channel.">
			 <option display="Unused" id="module.driver.keymatrix.channel_mask.channel_5.unused" value="(uint32_t)0"/>
			 <option display="Used" id="module.driver.keymatrix.channel_5.used" value="(uint32_t)0x20"/>
		</property>
		<property default="module.driver.keymatrix.channel_mask.channel_6.unused" display="    Channel 6" id="module.driver.keymatrix.channel_6" description="Select to enable this channel.">
			 <option display="Unused" id="module.driver.keymatrix.channel_mask.channel_6.unused" value="(uint32_t)0"/>
			 <option display="Used" id="module.driver.keymatrix.channel_6.used" value="(uint32_t)0x40"/>
		</property>
		<property default="module.driver.keymatrix.channel_mask.channel_7.unused" display="    Channel 7" id="module.driver.keymatrix.channel_7" description="Select to enable this channel.">
			 <option display="Unused" id="module.driver.keymatrix.channel_mask.channel_7.unused" value="(uint32_t)0"/>
			 <option display="Used" id="module.driver.keymatrix.channel_7.used" value="(uint32_t)0x80"/>
		</property>
		<property default="module.driver.keymatrix.hw_trigger.trig_rising" display="Trigger Type" id="module.driver.keymatrix.hw_trigger" description="Specify if the enabled channels detect a rising edge or a falling edge. NOTE: either all channels detecting a rising edge or all channels detecting a falling edge.">
			<option display="Falling Edge" id="module.driver.keymatrix.hw_trigger.trig_falling" value="KEYMATRIX_TRIG_FALLING"/>
			<option display="Rising Edge" id="module.driver.keymatrix.hw_trigger.trig_rising" value="KEYMATRIX_TRIG_RISING"/>
		</property>
		<property default="module.driver.keymatrix.irq_enable.false" display="Interrupt enabled after initialization" id="module.driver.keymatrix.irq_enable" description="Select if the module interrupts will be enabled as part of the open call.">
			<option display="True" id="module.driver.keymatrix.irq_enable.true" value="true"/>
			<option display="False" id="module.driver.keymatrix.irq_enable.false" value="false"/>
		</property>
		<property default="NULL" display="Callback" id="module.driver.keymatrix.p_callback" description="A user callback function can be provided. If this callback function is provided, it will be called from the interrupt service routine (ISR) each time the IRQ triggers.">
			<constraint display="Name must be a valid C symbol">testSymbol("${module.driver.keymatrix.p_callback}")</constraint>
        </property>
        <property default="" display="Key Interrupt Priority" id="module.driver.keymatrix.irq_ipl" description="Select the key interrupt priority."> 
            <select enum="enum.mcu.nvic.priorities.mandatory"/>
        </property>
		<header>
            /** Key Matrix on KINT Instance. */
            extern const keymatrix_instance_t ${module.driver.keymatrix.name};
			#ifdef ${module.driver.keymatrix.p_callback}
			#define KEYMATRIX_ON_KINT_CALLBACK_USED_${module.driver.keymatrix.name} (0)
			#else
			#define KEYMATRIX_ON_KINT_CALLBACK_USED_${module.driver.keymatrix.name} (1)
			#endif
			#if KEYMATRIX_ON_KINT_CALLBACK_USED_${module.driver.keymatrix.name}
			void ${module.driver.keymatrix.p_callback}(keymatrix_callback_args_t * p_args);
			#endif
#ifndef ${module.driver.keymatrix.p_callback}
void ${module.driver.keymatrix.p_callback}(keymatrix_callback_args_t * p_args);
#endif
        </header>
		<includes>#include &quot;r_kint.h&quot;
#include &quot;r_keymatrix_api.h&quot;</includes>
		<declarations>
#if ${module.driver.keymatrix.irq_ipl} != BSP_IRQ_DISABLED
#if !defined(SSP_SUPPRESS_ISR_${module.driver.keymatrix.name}) &amp;&amp; !defined(SSP_SUPPRESS_ISR_KINT)
SSP_VECTOR_DEFINE(key_int_isr, KEY, INT);
#endif
#endif
kint_instance_ctrl_t ${module.driver.keymatrix.name}_ctrl;
const keymatrix_cfg_t ${module.driver.keymatrix.name}_cfg =
{
    .channels            = (uint32_t)((${module.driver.keymatrix.channel_0}) | (${module.driver.keymatrix.channel_1}) | (${module.driver.keymatrix.channel_2}) | (${module.driver.keymatrix.channel_3}) | (${module.driver.keymatrix.channel_4}) | (${module.driver.keymatrix.channel_5}) | (${module.driver.keymatrix.channel_6}) | (${module.driver.keymatrix.channel_7})),
    .trigger          = ${module.driver.keymatrix.hw_trigger},
    .autostart           = ${module.driver.keymatrix.irq_enable},
	.p_callback          = ${module.driver.keymatrix.p_callback},
	.p_context           = &amp;${module.driver.keymatrix.name},
    .irq_ipl             = ${module.driver.keymatrix.irq_ipl},
};
/* Instance structure to use this module. */
const keymatrix_instance_t ${module.driver.keymatrix.name} = 
{
    .p_ctrl        = &amp;${module.driver.keymatrix.name}_ctrl,
    .p_cfg         = &amp;${module.driver.keymatrix.name}_cfg,
    .p_api         = &amp;g_keymatrix_on_kint
};
</declarations>
	</module>
</synergyModuleDescription>
